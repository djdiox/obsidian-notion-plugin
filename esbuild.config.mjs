import esbuild from "esbuild";
import process from "process";
import builtins from 'builtin-modules'
import { config } from 'dotenv'
import fs from 'fs';
import path from "path";
config({path: '.env'})
console.log(process.env.OUTPUT_FILE)
const banner =
`/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = (process.argv[2] === 'production');
if(!fs.existsSync(process.env.OUTPUT_FOLDER)) {
	fs.mkdirSync(process.env.OUTPUT_FOLDER);
}
esbuild.build({
	banner: {
		js: banner,
	},
	entryPoints: ['main.ts'],
	bundle: true,
	external: [
		'obsidian',
		'electron',
		'dotenv',
		'@codemirror/autocomplete',
		'@codemirror/collab',
		'@codemirror/commands',
		'@codemirror/language',
		'@codemirror/lint',
		'@codemirror/search',
		'@codemirror/state',
		'@codemirror/view',
		'@lezer/common',
		'@lezer/highlight',
		'@lezer/lr',
		...builtins],
	format: 'cjs',
	watch: !prod,
	target: 'es2020',
	logLevel: "info",
	sourcemap: prod ? false : 'inline',
	treeShaking: true,
	outfile: path.join(process.env.OUTPUT_FOLDER, 'main.js') || 'main.js',
})
.catch(() => process.exit(1))
.finally(() => {
	const buildTarget = path.join(process.env.OUTPUT_FOLDER, 'manifest.json');
	console.log(`Copying manifest to: ` + buildTarget)
	fs.copyFileSync('./manifest.json',  buildTarget)
});
